
* _struct rrpc(rrpc.h)_

~~~ c
struct rrpc {
	struct nvm_tgt_dev *dev;
	struct gendisk *disk;

	sector_t soffset; /* logical sector offset */

	int nr_luns;
	struct rrpc_lun *luns;

	/* calculated values */
	unsigned long long nr_sects;

	/* Write strategy variables. Move these into each for structure for each
	 * strategy
	 */
	atomic_t next_lun; /* Whenever a page is written, this is updated
			    * to point to the next write lun
			    */

	spinlock_t bio_lock;
	struct bio_list requeue_bios;
	struct work_struct ws_requeue;

	/* Simple translation map of logical addresses to physical addresses.
	 * The logical addresses is known by the host system, while the physical
	 * addresses are used when writing to the disk block device.
	 */
	struct rrpc_addr *trans_map;

	/* also store a reverse map for garbage collection */
	struct rrpc_rev_addr *rev_trans_map;
	spinlock_t rev_lock;

	struct rrpc_inflight inflights;

	mempool_t *addr_pool;
	mempool_t *page_pool;
	mempool_t *gcb_pool;
	mempool_t *rq_pool;

	struct timer_list gc_timer;
	struct workqueue_struct *krqd_wq;
	struct workqueue_struct *kgc_wq;
};
~~~

rrpc 구조체 자료구조 중 _struct rrpc_addr *trans_map;_, _struct rrpc_rev_addr *rev_trans_map;_ 멤버 변수를 사용하여 address mapping 을 manage 한다. 각 멤버 구조체는 같은 파일(rrpc.h)에 다음과 같이 정의되어 있다.

* _struct rrpc_addr & struct rrpc_rev_addr(rrpc.h)_

~~~ c
  /* Logical to physical mapping */
  struct rrpc_addr {
  	u64 addr;
  	struct rrpc_block *rblk;
  };

  /* Physical to logical mapping */
  struct rrpc_rev_addr {
  	u64 addr;
};
~~~
